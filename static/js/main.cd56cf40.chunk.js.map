{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","Default","sortField","setSortField","isGoodsReversed","setIsGoodsReversed","visibleGoods","goods","isSorted","isReversed","prepareGoods","sort","good1","good2","Alphabet","localeCompare","Length","length","reverse","getActionsGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,kBAAAA,E,gBAAAA,E,YAAAA,M,KAyCE,IAAME,EAAgB,WAC3B,MAAkCC,mBAASH,EAASI,SAApD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8CH,oBAAS,GAAvD,mBAAOI,EAAP,KAAwBC,EAAxB,KACMC,EAhCR,YAIiB,IAHfC,EAGc,EAHdA,MACAC,EAEc,EAFdA,SACAC,EACc,EADdA,WAEMC,EAAY,YAAOH,GAqBzB,OAnBIC,GACFE,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQL,GACN,KAAKX,EAASiB,SACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKhB,EAASmB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAKXR,GACFC,EAAaQ,UAGRR,EAMcS,CACnB,CACEZ,MAAOT,EACPU,SAAUN,EACVO,WAAYL,IAIhB,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYpB,IAAcL,EAASiB,WAEvCS,QAAS,WACPpB,EAAaN,EAASiB,WAP1B,iCAaA,wBACEO,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYpB,IAAcL,EAASmB,SAEvCO,QAAS,WACPpB,EAAaN,EAASmB,SAP1B,4BAaA,wBACEK,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAalB,IAEjBmB,QAAS,WACPlB,GAAoBD,IAPxB,sBAaEF,GAAaE,IAEb,wBACEiB,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPpB,EAAaN,EAASI,SACtBI,GAAmB,IALvB,sBAcJ,6BACGC,EAAakB,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YChIlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.cd56cf40.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  Alphabet = 'string',\n  Length = 'number',\n  Default = '',\n}\n\ntype UpdateProps = {\n  goods: string[],\n  isSorted: SortType,\n  isReversed: boolean,\n};\n\nfunction getActionsGoods({\n  goods,\n  isSorted,\n  isReversed,\n}: UpdateProps) {\n  const prepareGoods = [...goods];\n\n  if (isSorted) {\n    prepareGoods.sort((good1, good2) => {\n      switch (isSorted) {\n        case SortType.Alphabet:\n          return good1.localeCompare(good2);\n\n        case SortType.Length:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    prepareGoods.reverse();\n  }\n\n  return prepareGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState(SortType.Default);\n  const [isGoodsReversed, setIsGoodsReversed] = useState(false);\n  const visibleGoods = getActionsGoods(\n    {\n      goods: goodsFromServer,\n      isSorted: sortField,\n      isReversed: isGoodsReversed,\n    },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-info',\n            { 'is-light': sortField !== SortType.Alphabet },\n          )}\n          onClick={() => {\n            setSortField(SortType.Alphabet);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-success',\n            { 'is-light': sortField !== SortType.Length },\n          )}\n          onClick={() => {\n            setSortField(SortType.Length);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-warning',\n            { 'is-light': !isGoodsReversed },\n          )}\n          onClick={() => {\n            setIsGoodsReversed(!isGoodsReversed);\n          }}\n        >\n          Reverse\n        </button>\n\n        {(sortField || isGoodsReversed)\n        && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortField(SortType.Default);\n              setIsGoodsReversed(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>\n            {good}\n          </li>\n        ))}\n\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}